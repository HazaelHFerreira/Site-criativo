<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Jogo 2D de Sobrevivência</title>
    <style>
        body {
            margin: 0;
        }
        canvas {
            display: block;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/phaser@3.55.2/dist/phaser.min.js"></script>
</head>
<body>
<script>
    // Configuração do jogo
    var config = {
        type: Phaser.AUTO,
        width: 800,
        height: 600,
        physics: {
            default: 'arcade',
            arcade: {
                gravity: { y: 200 }
            }
        },
        scene: {
            preload: preload,
            create: create,
            update: update
        }
    };

    var game = new Phaser.Game(config);

    function preload() {
        this.load.image('player', 'assets/player.png');
        this.load.image('enemy', 'assets/enemy.png');
    }

    function create() {
        // Adiciona o jogador
        this.player = this.physics.add.sprite(100, 450, 'player');

        // Adiciona os inimigos
        this.enemies = this.physics.add.group();
        for (var i = 0; i < 5; i++) {
            var enemy = this.enemies.create(100 + i * 150, 200, 'enemy');
            enemy.setCollideWorldBounds(true);
            enemy.setBounce(1);
            enemy.setVelocity(Phaser.Math.Between(-200, 200), 20);
        }

        // Configura colisões
        this.physics.add.collider(this.player, this.enemies, hitEnemy, null, this);

        // Controles do jogador
        this.cursors = this.input.keyboard.createCursorKeys();
    }

    function update() {
        // Movimento do jogador
        if (this.cursors.left.isDown) {
            this.player.setVelocityX(-160);
        } else if (this.cursors.right.isDown) {
            this.player.setVelocityX(160);
        } else {
            this.player.setVelocityX(0);
        }

        // Reinicia o jogo se o jogador sair da tela
        if (this.player.x < 0 || this.player.x > this.sys.game.config.width) {
            this.scene.restart();
        }
    }

    function hitEnemy(player, enemy) {
        this.scene.restart();
    }
</script>
</body>
</html>
